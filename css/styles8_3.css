* {
  /* отступы отсчитываются внутрь. Размер блока будет 100-100 */
  box-sizing: border-box;
}

.flex-container {
  display: flex;
  /* justify-content: center; */

  /* чтобы центрировать элементы разного размера (по высоте) внутри родительского в горизонтальном ряду  по вертикали. */
  /* align-items: center; */

  flex-wrap: wrap; /*нужен для демо align-content по вертикали 2х рядов перенесенных*/

  /* по вертикали ряды элементов в родительском контейнере выравниваются */

  /* каждый ряд растягивается по высоте (доступной высоты ряда) в родительском контейнере */
  align-content: stretch; /*по-умолч*/

  /* Остальные – ряды вместе-рядом по высоте, но относительно контейнера – вверху, внизу или по центру: */

  align-content: flex-start;
  align-content: flex-end;
  align-content: center;

  height: 400px;
}

.item {
  /* display: none; */
  /* отступы отсчитываются внутрь. Размер блока будет 100-100 */
  box-sizing: border-box;
  width: 100px;
  height: 100px;
  background-color: burlywood;
  padding: 10px;
  border: 6px solid darkred;
  /* размер блока будет 130-130 (100+10*2 padding + 5*2 border) */
  margin: 10px;
}

/* Для сделать ращзными элеементы чтобы посмотеть   align-items: - выравнивание вдоль поперчной оси */
/* .item:nth-child(2) {
  width: 50px;
  height: 50px;
} */

/* Внимание - чтобы отработало - надо last-child без скобочек */
/* .item:last-child {
  width: 80px;
  height: 80px;
} */
